name: 'Likvido Deployment Pipeline'
description: 'A composite action to build and deploy your application based on the triggering event and branch.'

inputs:
  staging-branch-name:
    description: 'The name of the staging branch.'
    required: true
  production-branch-name:
    description: 'The name of the production branch.'
    required: true
  pull-request-docker-file-target:
    description: 'The target for the Dockerfile during pull request builds.'
    required: true
  docker-working-directory:
    description: 'The working directory for Docker.'
    required: true
  dockerfile-relative-path:
    description: 'The relative path to the Dockerfile.'
    required: true
  deployment-path:
    description: 'The path to the deployment configuration file.'
    required: true
  app-name:
    description: 'The name of the application.'
    required: true
  kubernetes-namespace:
    description: 'The Kubernetes namespace to deploy to.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Build & test (PR scenario)
      if: ${{ github.event_name == 'pull_request' }}
      uses: likvido/action-pr@v1
      with:
        working-directory: ${{ inputs.docker-working-directory }}
        docker-file: ${{ inputs.dockerfile-relative-path }}
        docker-file-target: ${{ inputs.pull-request-docker-file-target }}

    - name: Build & deploy to staging
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/${{ inputs.staging-branch-name }}' }}
      uses: likvido/action-release@v1
      with:
        docker-working-directory: ${{ inputs.docker-working-directory }}
        docker-file-relative: ${{ inputs.dockerfile-relative-path }}
        deployment-file: ${{ inputs.deployment-path }}
        app-name: ${{ inputs.app-name }}
        kubernetes-namespace: ${{ inputs.kubernetes-namespace }}
        acr-registry: likvido
        aks-cluster-name: staging
        aks-cluster-resource-group: kubernetes-staging
        azure-service-principal-id: ${{ secrets.AZURE_SERVICE_PRINCIPAL_ID }}
        azure-service-principal-tenant: ${{ secrets.AZURE_SERVICE_PRINCIPAL_TENANT }}
        azure-service-principal-password: ${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}
        azure-service-principal-subscription: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SUBSCRIPTION }}

    - name: Build & deploy to production
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/${{ inputs.production-branch-name }}' }}
      uses: likvido/action-release@v1
      with:
        docker-working-directory: ${{ inputs.docker-working-directory }}
        docker-file-relative: ${{ inputs.dockerfile-relative-path }}
        deployment-file: ${{ inputs.deployment-path }}
        app-name: ${{ inputs.app-name }}
        kubernetes-namespace: ${{ inputs.kubernetes-namespace }}
        acr-registry: likvido
        aks-cluster-name: production
        aks-cluster-resource-group: kubernetes-production
        azure-service-principal-id: ${{ secrets.AZURE_SERVICE_PRINCIPAL_ID }}
        azure-service-principal-tenant: ${{ secrets.AZURE_SERVICE_PRINCIPAL_TENANT }}
        azure-service-principal-password: ${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}
        azure-service-principal-subscription: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SUBSCRIPTION }}
