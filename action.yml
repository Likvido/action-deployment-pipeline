name: 'Likvido Deployment Pipeline'
description: 'A composite action to build and deploy your application based on the triggering event and branch.'

inputs:
  staging-branch-name:
    description: 'The name of the staging branch.'
    required: true
  production-branch-name:
    description: 'The name of the production branch.'
    required: true
  pull-request-dockerfile-target:
    description: 'The target for the Dockerfile during pull request builds.'
    required: true
  docker-working-directory:
    description: 'The working directory for Docker.'
    required: true
  dockerfile-relative-path:
    description: 'The relative path to the Dockerfile.'
    required: true
  deployment-path:
    description: 'The path to the deployment configuration file.'
    required: true
  app-name:
    description: 'The name of the application.'
    required: true
  kubernetes-namespace:
    description: 'The Kubernetes namespace to deploy to.'
    required: true
  azure-service-principal-id:
    description: 'Azure Service Principal ID'
    required: true
  azure-service-principal-password:
    description: 'Azure Service Principal Password'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Build & test (PR scenario)
      if: ${{ github.event_name == 'pull_request' }}
      uses: likvido/action-pr@v1
      with:
        working-directory: ${{ inputs.docker-working-directory }}
        docker-file: ${{ inputs.dockerfile-relative-path }}
        docker-file-target: ${{ inputs.pull-request-dockerfile-target }}

    - name: Build & deploy to staging
      if: ${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', inputs.staging-branch-name) }}
      uses: likvido/action-release@v2.2
      with:
        docker-working-directory: ${{ inputs.docker-working-directory }}
        docker-file-relative: ${{ inputs.dockerfile-relative-path }}
        deployment-file: ${{ inputs.deployment-path }}
        app-name: ${{ inputs.app-name }}
        environment: staging
        kubernetes-namespace: ${{ inputs.kubernetes-namespace }}
        acr-registry: likvido
        azure-service-principal-id: ${{ inputs.azure-service-principal-id }}
        azure-service-principal-password: ${{ inputs.azure-service-principal-password }}
        gitops-repo-url: 'https://github.com/Likvido/Likvido.Kubernetes'
        github-app-id: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_APP_ID }}
        github-app-private-key-base64: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_PRIVATE_KEY_BASE64 }}
        github-app-installation-id: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_INSTALLATION_ID }}

    - name: Build & deploy to production
      if: ${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', inputs.production-branch-name) }}
      uses: likvido/action-release@v2.2
      with:
        docker-working-directory: ${{ inputs.docker-working-directory }}
        docker-file-relative: ${{ inputs.dockerfile-relative-path }}
        deployment-file: ${{ inputs.deployment-path }}
        app-name: ${{ inputs.app-name }}
        environment: production
        kubernetes-namespace: ${{ inputs.kubernetes-namespace }}
        acr-registry: likvido
        azure-service-principal-id: ${{ inputs.azure-service-principal-id }}
        azure-service-principal-password: ${{ inputs.azure-service-principal-password }}
        gitops-repo-url: 'https://github.com/Likvido/Likvido.Kubernetes'
        github-app-id: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_APP_ID }}
        github-app-private-key-base64: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_PRIVATE_KEY_BASE64 }}
        github-app-installation-id: ${{ secrets.LIKVIDO_DEPLOYMENT_PUSHER_INSTALLATION_ID }}
